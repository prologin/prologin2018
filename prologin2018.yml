name: prologin2018
rules_type: turnbased

constant:
  -
    cst_name: TAILLE_ICEBERG
    cst_val: 31
    cst_comment: Taille de l'iceberg (longueur et largeur).
  -
    cst_name: NB_TOURS
    cst_val: 100
    cst_comment: Nombre de tours à jouer avant la fin de la partie.
  -
    cst_name: NB_POINTS_ACTION
    cst_val: 10
    cst_comment: Nombre de points d'action par tour.
  -
    cst_name: COUT_DEPLACEMENT
    cst_val: 1
    cst_comment: Nombre de point d'action que coûte un déplacement.
  -
    cst_name: COUT_GLISSADE
    cst_val: 3
    cst_comment: Nombre de points d'action que coûte une glissade.
  -
    cst_name: COUT_POUSSER
    cst_val: 4
    cst_comment: Nombre de points d'action nécessaires pour pousser un agent.
  -
    cst_name: NB_AGENTS
    cst_val: 4
    cst_comment: Nombre d'agents par joueur.
  -
    cst_name: NB_TOURS_CAPTURE
    cst_val: 3
    cst_comment: Nombre de tours nécessaires pour capturer un objectif.

enum:
  -
    enum_name: case_type
    enum_summary: "Types de cases"
    enum_field:
      - [libre, "Case libre"]
      - [mur, "Mur"]
      - [erreur, "Erreur"]
  -
    enum_name: direction
    enum_summary: "Points cardinaux"
    enum_field:
      - [nord, "Direction : nord"]
      - [est, "Direction : est"]
      - [sud, "Direction : sud"]
      - [ouest, "Direction : ouest"]
  -
    enum_name: erreur
    enum_summary: "Erreurs possibles"
    enum_field:
      - [ok, "L'action s'est effectuée avec succès."]
      - [pa_insuffisants, "Vous ne possédez pas assez de points d'action pour
                           réaliser cette action."]
      - [position_invalide, "La position spécifiée n'est pas sur l'iceberg."]
      - [obstacle_mur, "La position spécifiée est un mur."]
      - [obstacle_agent, "La position spécifiée est un agent."]
      - [direction_invalide, "La direction spécifiée n'existe pas."]
      - [id_agent_invalide, "L'agent spécifié n'existe pas."]
      - [id_joueur_invalide, "Le joueur spécifié n'existe pas."]
      - [rien_a_pousser, "Aucun agent à pousser dans la direction indiquée."]
  -
    enum_name: action_type
    enum_summary: "Types d'actions"
    enum_field:
      - [action_deplacer, "Action ``deplacer``"]
      - [action_glisser, "Action ``glisser``"]
      - [action_pousser, "Action ``pousser``"]

struct:
  -
    str_name: position
    str_summary: Position sur l'iceberg, donnée par deux coordonnées.
    str_tuple: yes
    str_field:
      - [ligne, int, "Coordonnée : ligne"]
      - [colonne, int, "Coordonnée : colonne"]
  -
    str_name: alien_info
    str_summary: Alien à capturer durant la mission.
    str_tuple: no
    str_field:
      - [pos, position, "Position de l'alien"]
      - [puissance, int, "Nombre de points obtenus pour la capture de cet
                          alien"]
      - [tour_invasion, int, "Tour où l'alien débarque sur la banquise"]
      - [duree_invasion, int, "Nombre de tours où l'alien reste sur la
                               banquise"]
      - [capture_en_cours, int, "Nombre de tours de la capture en cours,
                                 l'alien est considéré comme capturé si la
                                 variable atteint NB_TOURS_CAPTURE"]
  -
    str_name: action_hist
    str_summary: Action représentée dans l'historique.
                 L'action ``deplacer`` utilise ``id_agent`` et ``dest``.
                 L'action ``glisser`` utilise ``id_agent`` et ``dir``.
                 L'action ``pousser`` utilise ``id_agent`` et ``dir``.
    str_tuple: no
    str_field:
      - [type, action_type, "Type de l'action"]
      - [id_agent, int, "Numéro de l'agent concerné par l'action"]
      - [dest, position, "Case de destination lors d'un déplacement de l'agent"]
      - [dir, direction, "Direction visée lorsqu'un agent pousse ou glisse sur
                          l'iceberg"]

function:

# Actions

  -
    fct_name: deplacer
    fct_summary: Déplace l'agent ``id_agent`` sur la case donnée en paramètre.
    fct_ret_type: erreur
    fct_action: yes
    fct_arg:
      - [id_agent, int, "Numéro de l'agent"]
      - [dest, position, "Case de destination"]
  -
    fct_name: glisser
    fct_summary: Propulse l'agent ``id_agent`` dans la direction choisie jusqu'à
                 ce qu'il heurte un obstacle, c'est-à-dire soit un mur soit un
                 autre agent.
    fct_ret_type: erreur
    fct_action: yes
    fct_arg:
      - [id_agent, int, "Numéro de l'agent"]
      - [dir, direction, "Direction visée"]
  -
    fct_name: pousser
    fct_summary: L'agent ``id_agent`` pousse tout autre agent se trouvant sur
                 la case adjacente dans la direction indiquée. Ce dernier est
                 propulsé jusqu'à ce qu'il rencontre un obstacle, c'est-à-dire
                 soit un mur soit un autre agent.
    fct_ret_type: erreur
    fct_action: yes
    fct_arg:
      - [id_agent, int, "Numéro de l'agent"]
      - [dir, direction, "Direction visée"]

# Fonctions de requête de l'état du jeu

  -
    fct_name: type_case
    fct_summary: Renvoie le type d'une case donnée.
    fct_ret_type: case_type
    fct_arg:
      - [pos, position, "Case choisie"]
  -
    fct_name: agent_sur_case
    fct_summary: Indique si un agent se trouve sur une case donnée.
                 Renvoie faux si la position est invalide.
    fct_ret_type: bool
    fct_arg:
      - [pos, position, "Case choisie"]
  -
    fct_name: alien_sur_case 
    fct_summary: Indique si un alien se trouve sur une case donnée.
                 Renvoie faux si la position est invalide.
    fct_ret_type: bool
    fct_arg:
      - [pos, position, "Case choisie"]
  -
    fct_name: position_agent
    fct_summary: Indique la position de l'agent sur l'iceberg désigné par le
                 numéro ``id_agent`` appartenant au joueur ``id_joueur``.
    fct_ret_type: position
    fct_arg:
      - [id_joueur, int, "Numéro du joueur"]
      - [id_agent, int, "Numéro de l'agent"]
  -
    fct_name: info_alien
    fct_summary: Renvoie la description d'un alien en fonction d'une position
                 donnée.
    fct_ret_type: alien_info
    fct_arg:
      - [pos, position, "Case choisie"]
  -
    fct_name: liste_aliens
    fct_summary: Renvoie la liste de tous les aliens présents sur l'iceberg.
    fct_ret_type: alien_info array
    fct_arg: []
  -
    fct_name: liste_tempetes
    fct_summary: Renvoie la liste des tours où se produisent une tempête.
    fct_ret_type: int array
    fct_arg: []
  -
    fct_name: direction_tempete
    fct_summary: Renvoie la direction des tempêtes.
    fct_ret_type: direction
    fct_arg: []

# Historique (actions de l'adversaire durant le tour précédent)

  -
    fct_name: historique
    fct_summary: Renvoie la liste des actions effectuées par l’adversaire
                 durant son tour, dans l'ordre chronologique.
    fct_ret_type: action_hist array
    fct_arg: []

# Autres

  -
    fct_name: score
    fct_summary: Renvoie le score du joueur ``id_joueur``.
                 Renvoie -1 si le joueur est invalide.
    fct_ret_type: int
    fct_arg: 
        - [id_joueur, int, "Numéro du joueur"]
  -
    fct_name: moi
    fct_summary: Renvoie votre numéro de joueur.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: adversaire
    fct_summary: Renvoie le numéro de joueur de votre adversaire.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: annuler
    fct_summary: Annule la dernière action.
                 Renvoie ``false`` quand il n'y a pas d'action à annuler ce
                 tour-ci.
    fct_ret_type: bool
    fct_arg: []
  -
    fct_name: tour_actuel
    fct_summary: Retourne le numéro du tour actuel.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: points_action
    fct_summary: Renvoie votre nombre de points d'action restants pour le tour.
    fct_ret_type: int
    fct_arg: []

user_function:
  -
    fct_name: partie_init
    fct_summary: Fonction appelée au début de la partie.
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: jouer_tour
    fct_summary: Fonction appelée à chaque tour.
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: partie_fin
    fct_summary: Fonction appelée à la fin de la partie.
    fct_ret_type: void
    fct_arg: []
